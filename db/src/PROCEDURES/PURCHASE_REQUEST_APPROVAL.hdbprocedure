PROCEDURE "PURCHASE_REQUEST_APPROVAL" (
    IN IN_ACTION VARCHAR(50),
	IN IN_APPTYPE NVARCHAR(50),
	IN IN_PR_NO INTEGER,
	-- IN IN_STATUS INTEGER,
	IN IN_APPROVER_ROLE NVARCHAR(10),
	IN IN_APPROVER_LEVEL INTEGER,
    IN IN_SAP_SO_NO NVARCHAR(10),
	IN IN_DISTRIBUTOR_ID NVARCHAR(10),
	IN IN_GRAND_TOTAL NVARCHAR(20),
	IN ST_SO_ITEMS "ST_SO_ITEMS",
	IN ST_PR_ITEMS "ST_PR_ITEMS",
    IN ST_PR_EVENTS "ST_PR_EVENTS",	

	OUT OUT_SUCCESS VARCHAR(100),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN

	-- Local Variables:
	DECLARE LV_EVENT_COUNT NVARCHAR(50);
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_OUT_SUCCESS VARCHAR(100);
	DECLARE LV_SUCCESS_ACTION VARCHAR(100);
	DECLARE LV_STATUS VARCHAR(50);
	DECLARE LV_ROLE_DESC NVARCHAR(50);
	DECLARE LV_ITEM_NO INTEGER;
	DECLARE LV_ITEM_DESC NVARCHAR(1000);
	DECLARE LV_GRAND_TOTAL NVARCHAR(20);
	-- DECLARE EXIT HANDLER FOR SQLEXCEPTION
    -- SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE; 
    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    
	OUT_SUCCESS := null;
	LV_OUT_SUCCESS := null;
	LV_SUCCESS_ACTION := null;

    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
	SELECT "DESCRIPTION" INTO LV_ROLE_DESC FROM "DEALER_PORTAL_MASTER_USER_ROLE" WHERE "CODE" = :IN_APPROVER_ROLE;

    IF (:IN_ACTION = 'APPROVE') 
	    THEN
			--Adding The Item 
	        IF :IN_APPTYPE = 'ADD'
			THEN
			
			SELECT "PR_ITEM_NO","MATERIAL_DESC" INTO LV_ITEM_NO,LV_ITEM_DESC FROM :ST_PR_ITEMS;
			SELECT IFNULL(MAX("PR_ITEM_NO"), 0) + 1 INTO LV_ITEM_NO FROM "DEALER_PORTAL_PR_ITEMS" WHERE  "PR_NO" = :IN_PR_NO;
			INSERT INTO "DEALER_PORTAL_PR_ITEMS" 
			(
				"PR_NO","PR_ITEM_NO","MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
				"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT"
			)
			SELECT :IN_PR_NO,:LV_ITEM_NO,"MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
			"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT" FROM :ST_PR_ITEMS;

			COMMIT;
			LV_OUT_SUCCESS := 'Success';
			LV_EVENT_CODE := 5;
			LV_SUCCESS_ACTION := :LV_ITEM_DESC || ' material added successfully';

			--Deleting Item 
			ELSEIF :IN_APPTYPE = 'DELETE'
			THEN
			SELECT "PR_ITEM_NO","MATERIAL_DESC" INTO LV_ITEM_NO,LV_ITEM_DESC FROM :ST_PR_ITEMS;
			DELETE FROM "DEALER_PORTAL_PR_ITEMS" WHERE "PR_NO" = :IN_PR_NO AND "PR_ITEM_NO" = :LV_ITEM_NO;

			COMMIT;
			LV_OUT_SUCCESS := 'Success';
			LV_EVENT_CODE := 6;
			LV_SUCCESS_ACTION := :LV_ITEM_DESC || ' material deleted successfully';

			--Updating Item 
			ELSEIF :IN_APPTYPE = 'UPDATE'	
			THEN

			SELECT "PR_ITEM_NO","MATERIAL_DESC" INTO LV_ITEM_NO,LV_ITEM_DESC FROM :ST_PR_ITEMS;
			DELETE FROM "DEALER_PORTAL_PR_ITEMS" WHERE "PR_NO" = :IN_PR_NO AND "PR_ITEM_NO" = :LV_ITEM_NO;

			INSERT INTO "DEALER_PORTAL_PR_ITEMS" 
			(
				"PR_NO","PR_ITEM_NO","MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
				"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT"
			)
			SELECT :IN_PR_NO,:LV_ITEM_NO,"MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
			"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT" FROM :ST_PR_ITEMS;
       
			UPDATE "DEALER_PORTAL_PR_HEADER" SET "GRAND_TOTAL" = :IN_GRAND_TOTAL WHERE "PR_NO"= :IN_PR_NO;
				
			COMMIT;
			LV_OUT_SUCCESS := 'Success';
			LV_EVENT_CODE := 7;
			LV_SUCCESS_ACTION := :LV_ITEM_DESC || ' material updated successfully';
			--Approve Part Continue	
			ELSEIF :IN_APPTYPE = 'PR'
			THEN

    	    LV_STATUS := 3;
			LV_EVENT_CODE := 3;
    	    LV_SUCCESS_ACTION := 'approved with SAP Document No ' || :IN_SAP_SO_NO;

			UPDATE "DEALER_PORTAL_PR_HEADER"
			SET 
			"PR_STATUS" = :LV_STATUS,
			"GRAND_TOTAL" = :IN_GRAND_TOTAL,
			"SAP_SO_NO" = :IN_SAP_SO_NO,
			"APPROVER_LEVEL" =null,
			"APPROVER_ROLE"= null,
			"LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PR_NO" = :IN_PR_NO;

			INSERT INTO "DEALER_PORTAL_SO_HEADER" VALUES
			(
				:IN_DISTRIBUTOR_ID,:IN_SAP_SO_NO,:LV_CURR_TIMESTAMP,'','','',1
			);

			INSERT INTO "DEALER_PORTAL_SO_ITEMS"
			(
				"SAP_SO_NO","SO_ITEM_NO","MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
				"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT"
			)
			SELECT :IN_SAP_SO_NO,"SO_ITEM_NO","MATERIAL_CODE","MATERIAL_DESC","IMAGE_URL","HSN_CODE","UNIT_OF_MEASURE","QUANTITY","FREE_QUANTITY","STD_PRICE","BASE_PRICE",
			"DISC_AMOUNT","DISC_PERC","NET_AMOUNT","TOTAL_AMOUNT","CGST_PERC","CGST_AMOUNT","SGST_PERC","SGST_AMOUNT","IGST_PERC","IGST_AMOUNT","TAXES_AMOUNT"
			FROM :ST_SO_ITEMS;
			
			COMMIT;
			LV_OUT_SUCCESS := 'Success';
		END IF;

		ELSEIF(:IN_ACTION = 'APPROVE_PENDING')
		THEN
			LV_EVENT_CODE := 4;
			LV_STATUS := 4;
			LV_SUCCESS_ACTION := 'sent to ' || :LV_ROLE_DESC || ' for approval';

			UPDATE "DEALER_PORTAL_PR_HEADER"
			SET 
			"PR_STATUS" = :LV_STATUS,
			"GRAND_TOTAL" = :IN_GRAND_TOTAL,
			"APPROVER_LEVEL" = :IN_APPROVER_LEVEL,
			"APPROVER_ROLE"= :IN_APPROVER_ROLE,
			"LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PR_NO" = :IN_PR_NO;

			LV_OUT_SUCCESS := 'Success';
	
	    ELSEIF (:IN_ACTION = 'REJECT')
	    THEN
	        LV_STATUS := 2;
			LV_EVENT_CODE := 2;
	        LV_SUCCESS_ACTION := 'rejected';

            UPDATE "DEALER_PORTAL_PR_HEADER"
			SET 
			"PR_STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" =null,
			"APPROVER_ROLE"= null,
			"LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PR_NO" = :IN_PR_NO;

			LV_OUT_SUCCESS := 'Success';

		ELSEIF (:IN_ACTION = 'CANCEL')
			THEN
			LV_STATUS := 5;
			LV_EVENT_CODE := 8;
			LV_SUCCESS_ACTION := 'cancelled';

			UPDATE "DEALER_PORTAL_PR_HEADER"
			SET 
			"PR_STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" =null,
			"APPROVER_ROLE"= null,
			"LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PR_NO" = :IN_PR_NO;

			LV_OUT_SUCCESS := 'Success';

		END IF;

    IF :LV_OUT_SUCCESS = 'Success'
	    THEN
			SELECT COUNT(*) into LV_EVENT_COUNT FROM "DEALER_PORTAL_PR_EVENT_LOG" 
			WHERE "PR_NO" = :IN_PR_NO;

			LV_EVENT_NO := LV_EVENT_COUNT + 1;
			
			INSERT INTO "DEALER_PORTAL_PR_EVENT_LOG"
            (
                "PR_NO","EVENT_NO","EVENT_CODE","USER_ID","USER_ROLE","USER_NAME","COMMENTS","CREATION_DATE"
            )
            SELECT :IN_PR_NO,:LV_EVENT_NO,:LV_EVENT_CODE,"USER_ID","USER_ROLE","USER_NAME","COMMENTS",:LV_CURR_TIMESTAMP FROM :ST_PR_EVENTS;

	    COMMIT;
		IF :IN_APPTYPE = 'ADD' OR :IN_APPTYPE = 'DELETE' OR :IN_APPTYPE = 'UPDATE'
		THEN
		OUT_SUCCESS := :LV_SUCCESS_ACTION;
		ELSE
		OUT_SUCCESS := 'Purchase request no. ' || :IN_PR_NO || ' ' || :LV_SUCCESS_ACTION;
		END IF;
        ELSE
	    OUT_SUCCESS := null;
        END IF;

    END;