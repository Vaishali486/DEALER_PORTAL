PROCEDURE "CMS_OPERATIONS" ( 
    IN IN_ACTION STRING,
    IN IN_REQUEST_NO BIGINT,
    IN IN_SR_NO INTEGER,
    IN IN_DOC_ID BIGINT,
    IN ST_CMS "ST_REGFORM_ATTACHMENTS_CMS",

    OUT OUT_DOC_ID INTEGER,
    OUT OUT_SUCCESS STRING,
    OUT OUT_ERROR_CODE BIGINT,
    OUT OUT_ERROR_MESSAGE VARCHAR(1000)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
AS
BEGIN
    -- Local Variables:
    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_COUNT INTEGER;
    DECLARE LV_SR_NO INTEGER;    
    -- Loop related local variables
    DECLARE LV_REQUEST_NO BIGINT;
    DECLARE LV_FILENAME NVARCHAR(100);
    DECLARE LV_DOC_ID BIGINT;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;   

    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
    OUT_DOC_ID := null;
    OUT_SUCCESS := null;
 
    IF ( :IN_ACTION = 'UPLOAD' ) THEN 

        SELECT "FILE_NAME" INTO LV_FILENAME 
        FROM :ST_CMS;

        SELECT "DOC_ID".NEXTVAL INTO LV_DOC_ID FROM DUMMY;

        INSERT INTO "DEALER_PORTAL_REGFORM_ATTACHMENTS_CMS" 
        ( "DOC_ID","FILE_NAME", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOADED_ON")
        SELECT :LV_DOC_ID, "FILE_NAME", "FILE_MIMETYPE", "FILE_CONTENT", :LV_CURR_TIMESTAMP
        FROM :ST_CMS;
        
        COMMIT;
        OUT_DOC_ID := :LV_DOC_ID;
        OUT_SUCCESS := :LV_FILENAME || ' uploaded succesfully.';

    ELSEIF ( :IN_ACTION = 'DELETE' )  THEN

        SELECT "FILE_NAME" INTO LV_FILENAME 
        FROM :ST_CMS;

        DELETE FROM "DEALER_PORTAL_REGFORM_ATTACHMENTS"
        WHERE "REQUEST_NO" = :IN_REQUEST_NO AND "OT_DOC_ID" = :IN_DOC_ID;

        COMMIT;
        OUT_DOC_ID := :IN_DOC_ID;
        OUT_SUCCESS := :LV_FILENAME || ' deleted succesfully.';
    
    END IF;
END