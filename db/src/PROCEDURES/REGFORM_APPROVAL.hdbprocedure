PROCEDURE "REGFORM_APPROVAL" (
    IN REQUEST_NO BIGINT,
	IN ENTITY_CODE NVARCHAR(100),
	IN REQUEST_TYPE INTEGER,
	IN REGISTERED_ID NVARCHAR(100),
	IN REQUESTER_ID NVARCHAR(100),
	IN USER_ID NVARCHAR(100),
	IN APPROVER_LEVEL INTEGER,
	IN ST_REQUEST_EVENTS_LOG "ST_REQUEST_EVENTS_LOG",
    IN CHANGE_REQUEST_NO NVARCHAR(15),
    IN IDEAL_DIST_NO BIGINT,
    IN SAP_DIST_CODE NVARCHAR(10),
    IN DIST_NAME NVARCHAR(100),
    IN COMPARE_TYPE NVARCHAR(1),
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_EMAIL_TO NVARCHAR(100),
	OUT OUT_MAX_LEVEL INTEGER,
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_CURR_DATE TIMESTAMP;
	DECLARE LV_COUNT INTEGER;
	DECLARE LV_COUNT1 INTEGER;
	DECLARE LV_STATUS INTEGER;
   -- Event Values
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_REMARK NVARCHAR(100); 
	--Matrix Values
	DECLARE LV_MAX_LEVEL INTEGER;
	-- Next Approver details
	DECLARE LV_NXT_HIERARCHY_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
	DECLARE LV_NXT_APPROVER_USER NVARCHAR(100);
	DECLARE LV_TYPE NVARCHAR(10); 

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;

	-- Error
	-- SELECT * FROM "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
	-- WHERE "REQUEST_NO" = 'HELLO';             
	
	-- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    SELECT CURRENT_DATE INTO LV_CURR_DATE FROM DUMMY;
	LV_TYPE := 'REG';

	--Generate SAP Vendor Code (BP No)
	-- SELECT "SAP_DEALER_CODE".NEXTVAL INTO SAP_DEALER_CODE FROM DUMMY;
    
   
   -- Get Count for new EVENT_NO
	SELECT COUNT(*) into LV_EVENT_COUNT FROM "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
	WHERE "REQUEST_NO" = :REQUEST_NO;
	
	LV_EVENT_NO := :LV_EVENT_COUNT + 1;
	
	-- Get Count of levels in Matrix for specific Entity
	SELECT MAX("LEVEL") into LV_MAX_LEVEL FROM "DEALER_PORTAL_MASTER_APPROVAL_HIERARCHY"
	WHERE "ENTITY_CODE" = :ENTITY_CODE AND "TYPE" = :LV_TYPE;
    
    
    OUT_SUCCESS := null;
    OUT_MAX_LEVEL := :LV_MAX_LEVEL;
    
    LV_NXT_APPROVER_LEVEL := :APPROVER_LEVEL + 1;
    
    -- Get Next Approver Role from Approver level
	IF :APPROVER_LEVEL BETWEEN 1 AND (:LV_MAX_LEVEL - 1)
	THEN
	SELECT "ROLE_CODE","USER_IDS"
	INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_USER
	FROM "DEALER_PORTAL_MASTER_APPROVAL_HIERARCHY" 
	WHERE "LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :ENTITY_CODE AND "TYPE" = 'REG';
	
	-- SELECT COUNT(*)
	-- INTO LV_COUNT 
	-- FROM "DEALER_PORTAL_USER_DELEGATION" 
	-- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_HIERARCHY_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	
	-- IF :LV_COUNT != 0
	-- THEN
	-- LV_NXT_APPROVER_ROLE := null;
	
	-- SELECT "ASSIGN_TO" 
	-- INTO LV_NXT_HIERARCHY_ID 
	-- FROM "DEALER_PORTAL_USER_DELEGATION" 
	-- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_HIERARCHY_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	-- END IF;
		
	-- ELSE
	--     LV_NXT_APPROVER_ROLE := null;
	-- 	-- change 31/01/24
	--     -- LV_NXT_HIERARCHY_ID := null;
	END IF;
	
-- 	-- APPROVAL PROCESS--------------------------------------------------------------------
	IF :APPROVER_LEVEL < :LV_MAX_LEVEL
	THEN
	    LV_EVENT_CODE := 5;
	    LV_STATUS := 10;
	    LV_REMARK := 'Approved by - ' || :USER_ID;
	    
	 -- 1) Update Main Table
        UPDATE "DEALER_PORTAL_REQUEST_INFO"
        SET "STATUS" = :LV_STATUS,
		"APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
        "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
        "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "REQUEST_NO" = :REQUEST_NO;
        
	-- 3) Insert into Events Log:	
		INSERT INTO "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;
	
		OUT_SUCCESS := 'Request: ' || :REQUEST_NO || ' Approved by ' || :USER_ID || '.';
		OUT_EMAIL_TO := :LV_NXT_APPROVER_USER;
		COMMIT;	
		
	ELSEIF :APPROVER_LEVEL = :LV_MAX_LEVEL
	THEN
	    LV_EVENT_CODE := 9;
	   	-- LV_STATUS := 10; -- in Approval - MDG
	   	LV_NXT_APPROVER_ROLE := null;
	    LV_NXT_APPROVER_LEVEL := null;
	    -- LV_NXT_APPROVER_ROLE := null;
	    LV_REMARK := 'Final Approval by - ' || :USER_ID;    
	    
	    IF :COMPARE_TYPE = 'A'
	    THEN
		LV_STATUS := 11; -- Registered
		-- OUT_SUCCESS := 'Supplier Registered as SAP Vendor No.: ' || :SAP_DEALER_CODE;
		OUT_SUCCESS := 'Distributor ' || :DIST_NAME || ' registered successfully';
        ELSE
        LV_STATUS := 10; -- in Approval - MDG
		OUT_SUCCESS := 'Distributor registration completed for : ' || :DIST_NAME;
		-- OUT_SUCCESS := 'CR NO: ' || :CHANGE_REQUEST_NO || ' created for Supplier.: ' || :SUPPLIER_NAME;
		--  OUT_SUCCESS := 'CR NO: ' || :CHANGE_REQUEST_NO || ' created for SAP Vendor No.: ' || :SAP_DEALER_CODE;
		END IF;
	    
	    -- 1) Update Main Table
        UPDATE "DEALER_PORTAL_REQUEST_INFO"
        SET "STATUS" = :LV_STATUS,
            "SAP_DIST_CODE" = :SAP_DIST_CODE,
            "DIST_NAME1"  = :DIST_NAME,
			"APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
            "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
            "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP,
            "MDG_CR_NO" = :CHANGE_REQUEST_NO
        WHERE "REQUEST_NO" = :REQUEST_NO;
        
	-- 3) Insert into Events Log:	
		INSERT INTO "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;
    	
    	--3) Update Active Status Table  
        -- Set all previous Actives of "IDEAL_DEALER_CODE" as null
        UPDATE "DEALER_PORTAL_REQUEST_ACTIVE_STATUS"
        SET "ACTIVE" = null
        WHERE "IDEAL_DIST_CODE" = :IDEAL_DIST_NO;
        
        -- Set latest Request as Active
        UPDATE "DEALER_PORTAL_REQUEST_ACTIVE_STATUS"
        SET "ACTIVE" = 'A',
            "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "REQUEST_NO" = :REQUEST_NO;
        
        UPDATE "DEALER_PORTAL_MASTER_IDEAL_SAP_DEALER_NO"
        SET "SAP_DIST_CODE" = :SAP_DIST_CODE
        WHERE "IDEAL_DIST_CODE" = :IDEAL_DIST_NO;
		
		OUT_EMAIL_TO := :LV_NXT_APPROVER_USER;
		COMMIT;	
	END IF;
END