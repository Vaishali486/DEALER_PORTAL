PROCEDURE "PRODUCT_COMPLAINT_APPROVAL" (
    IN IN_ACTION VARCHAR(50),
	IN IN_PPR_NO BIGINT,
	IN IN_APPROVER_ROLE NVARCHAR(10),
	IN IN_APPROVER_LEVEL INTEGER,
    IN IN_SAP_NO NVARCHAR(10),
	IN IN_DISTRIBUTOR_ID NVARCHAR(10),
    IN ST_PPR_EVENTS "ST_PPR_EVENTS",	

	OUT OUT_SUCCESS VARCHAR(100),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN

	-- Local Variables:
	DECLARE LV_EVENT_COUNT NVARCHAR(50);
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_OUT_SUCCESS VARCHAR(100);
	DECLARE LV_SUCCESS_ACTION VARCHAR(50);
	DECLARE LV_STATUS VARCHAR(50);
	DECLARE LV_ROLE_DESC NVARCHAR(50);
    DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(30);
    DECLARE LV_NXT_APPROVER_ID INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE; 

    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    
	OUT_SUCCESS := null;
	LV_OUT_SUCCESS := null;
	LV_SUCCESS_ACTION := null;

    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
	SELECT "DESCRIPTION" INTO LV_ROLE_DESC FROM "DEALER_PORTAL_MASTER_USER_ROLE" WHERE "CODE" = :IN_APPROVER_ROLE;

    IF (:IN_ACTION = 'APPROVE') 
	    THEN
	            		
    	    LV_STATUS := 3;
			LV_EVENT_CODE := 3;
    	    LV_SUCCESS_ACTION := 'approved';
            -- with SAP Document No ' || :IN_SAP_NO;

			UPDATE "DEALER_PORTAL_PPR_HEADER"
			SET 
			"STATUS" = :LV_STATUS,
			-- "SAP_ORDER_NO" = :IN_SAP_NO,
			"APPROVER_LEVEL" =null,
			"APPROVER_ROLE"= null
			-- "LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PPR_NO" = :IN_PPR_NO;			
			
			COMMIT;
			LV_OUT_SUCCESS := 'Success';

		ELSEIF(:IN_ACTION = 'APPROVE_PENDING')
		THEN
			LV_EVENT_CODE := 2;
			LV_STATUS := 2;
			LV_SUCCESS_ACTION := 'sent to ' || :LV_ROLE_DESC || ' for approval';

			UPDATE "DEALER_PORTAL_PPR_HEADER"
			SET 
			"STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" = :IN_APPROVER_LEVEL,
			"APPROVER_ROLE"= :IN_APPROVER_ROLE
			-- "LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PPR_NO" = :IN_PPR_NO;

			LV_OUT_SUCCESS := 'Success'; 

		ELSEIF (:IN_ACTION = 'REJECT')
		THEN
			LV_STATUS := 4;
			LV_EVENT_CODE := 4;
			LV_SUCCESS_ACTION := 'rejected';

			UPDATE "DEALER_PORTAL_PPR_HEADER"
			SET 
			"STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" =null,
			"APPROVER_ROLE"= null
			-- "LAST_UPDATED_DATE"=:LV_CURR_TIMESTAMP
			WHERE "PPR_NO" = :IN_PPR_NO;

			LV_OUT_SUCCESS := 'Success';

		END IF;

    IF :LV_OUT_SUCCESS = 'Success'
	    THEN
			SELECT COUNT(*) into LV_EVENT_COUNT FROM "DEALER_PORTAL_PPR_EVENTS" 
			WHERE "PPR_NO" = :IN_PPR_NO;

			LV_EVENT_NO := LV_EVENT_COUNT + 1;
			
			INSERT INTO "DEALER_PORTAL_PPR_EVENTS"
            (
                "PPR_NO","EVENT_NO","EVENT_CODE","USER_NAME","USER_ROLE","USER_ID","REMARK","COMMENT","CREATION_DATE"
            )
            SELECT :IN_PPR_NO,:LV_EVENT_NO,"EVENT_CODE","USER_NAME","USER_ROLE","USER_ID","REMARK","COMMENT",:LV_CURR_TIMESTAMP FROM :ST_PPR_EVENTS;

	    COMMIT;
		OUT_SUCCESS := 'Product complaint request no. ' || :IN_PPR_NO || ' ' || :LV_SUCCESS_ACTION;
        ELSE
	    OUT_SUCCESS := null;
        END IF;

    END;