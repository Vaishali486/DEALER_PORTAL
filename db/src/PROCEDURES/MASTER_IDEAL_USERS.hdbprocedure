PROCEDURE "MASTER_IDEAL_USERS"(
  IN IN_ACTION String,
  IN IN_SR_NO INTEGER,
  IN IN_USER_ID NVARCHAR(50),
  IN IN_EMAIL NVARCHAR(100),
  IN IN_USER_ROLE_DESC NVARCHAR(300),
  IN ST_MASTER_IDEAL_USERS "ST_MASTER_IDEAL_USERS",
  IN ST_ENTITY_CODES "ST_MASTER_USER_ENTITY_CODES",
  OUT OUT_SUCCESS VARCHAR(300)
  ) 
  LANGUAGE SQLSCRIPT 
  SQL SECURITY INVOKER 
  AS 
BEGIN

    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    -- DECLARE LV_EMAIL NVARCHAR(150);
    -- DECLARE LV_USER_ROLE NVARCHAR(50);
    -- DECLARE LV_USER_ROLE_DESC NVARCHAR(100);
    DECLARE LV_COUNT INTEGER;
    -- DECLARE LV_USER_ID NVARCHAR(150);
    DECLARE LV_SR_NO INTEGER;
    DECLARE LV_ROLE_FULL_DESC NVARCHAR(100);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;        
    
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    -- SELECT 	"DESCRIPTION" INTO LV_ROLE_FULL_DESC
    -- FROM "DEALER_PORTAL_MASTER_USER_ROLE"
    -- WHERE "CODE" = :IN_USER_ROLE_DESC;

    --comment this after access SA/CM
    -- SELECT "SR_NO","USER_ID","EMAIL","USER_ROLE" 
    -- INTO LV_SR_NO,LV_USER_ID,LV_EMAIL,LV_USER_ROLE 
    -- FROM :ST_MASTER_IDEAL_USERS;

    --comment this after access SA/CM
    -- SELECT 	"DESCRIPTION" INTO LV_USER_ROLE_DESC
    -- FROM "DEALER_PORTAL_MASTER_USER_ROLE"
    -- WHERE "CODE" = :LV_USER_ROLE;           
          
    IF :IN_ACTION = 'CREATE' THEN

      SELECT IFNULL(MAX("SR_NO"), 0) + 1 INTO LV_SR_NO FROM "DEALER_PORTAL_MASTER_IDEAL_USERS";

      INSERT INTO "DEALER_PORTAL_MASTER_IDEAL_USERS"  
      (
        "SR_NO","USER_ID","USER_ROLE","USER_NAME","EMAIL","COMPANY_CODE","EMP_NO","CREATED_ON","UPDATED_ON","ACTIVE"
      )
      SELECT 	:LV_SR_NO,"USER_ID","USER_ROLE","USER_NAME","EMAIL","COMPANY_CODE","EMP_NO",:LV_CURR_TIMESTAMP,"UPDATED_ON",'X'
      FROM :ST_MASTER_IDEAL_USERS;
      
      INSERT INTO "DEALER_PORTAL_MASTER_USER_ENTITY_CODES"  
      (
        "USER_ID","USER_ROLE","ENTITY_CODE","ENTITY_DESC","EMAIL"
      
      )
      SELECT 	"USER_ID","USER_ROLE","ENTITY_CODE", "ENTITY_DESC","EMAIL"
      FROM :ST_ENTITY_CODES;

      COMMIT;
      -- OUT_SUCCESS := 'User: ' ||  :LV_EMAIL || ' added as ' || :LV_USER_ROLE_DESC || ' in User master';
      OUT_SUCCESS := 'User: ' ||  :IN_EMAIL || ' added as ' || :IN_USER_ROLE_DESC || ' in User master';
      
    ELSEIF :IN_ACTION = 'UPDATE' THEN

      SELECT IFNULL(MAX("SR_NO"), 0) + 1 INTO LV_SR_NO FROM "DEALER_PORTAL_MASTER_IDEAL_USERS";
    
      --comment this for access both SA/CM
      -- UPDATE "DEALER_PORTAL_MASTER_IDEAL_USERS"
      -- SET 
      -- "USER_ROLE" = :LV_USER_ROLE,
      -- "UPDATED_ON" = :LV_CURR_TIMESTAMP
      -- WHERE "EMAIL" = :LV_EMAIL AND "SR_NO" = :LV_SR_NO;
        
      DELETE FROM "DEALER_PORTAL_MASTER_USER_ENTITY_CODES"
      WHERE "USER_ID" = :IN_USER_ID;

      --for access both SA/CM
      DELETE FROM "DEALER_PORTAL_MASTER_IDEAL_USERS"
      WHERE "USER_ID" = :IN_USER_ID;

      INSERT INTO "DEALER_PORTAL_MASTER_IDEAL_USERS"  
      (
        "SR_NO","USER_ID","USER_ROLE","USER_NAME","EMAIL","COMPANY_CODE","EMP_NO","CREATED_ON","UPDATED_ON","ACTIVE"
      
      )
      SELECT 	:LV_SR_NO,"USER_ID","USER_ROLE","USER_NAME","EMAIL","COMPANY_CODE","EMP_NO",:LV_CURR_TIMESTAMP,"UPDATED_ON",'X'
      FROM :ST_MASTER_IDEAL_USERS;

      INSERT INTO "DEALER_PORTAL_MASTER_USER_ENTITY_CODES"  
      (
        "USER_ID","USER_ROLE", "ENTITY_CODE","ENTITY_DESC","EMAIL"
      
      )
      SELECT 	"USER_ID","USER_ROLE","ENTITY_CODE","ENTITY_DESC","EMAIL"  
      FROM :ST_ENTITY_CODES;

      COMMIT;
      -- OUT_SUCCESS := 'User: ' ||  :LV_EMAIL || ' updated as ' || :LV_USER_ROLE_DESC || ' in User master';
      OUT_SUCCESS := 'User: ' ||  :IN_EMAIL || ' updated as ' || :IN_USER_ROLE_DESC || ' in User master';
    
      ELSEIF :IN_ACTION = 'DELETE' THEN
    
      DELETE FROM "DEALER_PORTAL_MASTER_IDEAL_USERS"
      WHERE "USER_ID" = :IN_USER_ID;
      -- SET  "ACTIVE" = null
      -- WHERE "EMAIL" = :IN_EMAIL;
          
      DELETE FROM "DEALER_PORTAL_MASTER_USER_ENTITY_CODES"
      WHERE "USER_ID" = :IN_USER_ID;
      -- IN_USER_ID IN_SR_NO IN_EMAIL IN_USER_ROLE_DESC

      COMMIT;
      OUT_SUCCESS := 'User: ' ||  :IN_EMAIL || ' deleted in User master';
    
      END IF;

END