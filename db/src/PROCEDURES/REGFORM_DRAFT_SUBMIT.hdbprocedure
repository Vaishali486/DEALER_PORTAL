PROCEDURE "REGFORM_DRAFT_SUBMIT" (
    IN IN_REQUEST_NO BIGINT,
    IN IN_REQUEST_TYPE INTEGER,
    IN IN_STEP_NO INTEGER,
    IN IN_ENTITY_CODE NVARCHAR(10),
    IN IN_USER_ID NVARCHAR(100),
    IN IS_RESEND NVARCHAR(5),
    IN IN_STATUS INTEGER,
    IN DEALER_CODE_FLAG NVARCHAR(10),

    IN ST_MAIN "ST_REQUEST_INFO",
    IN ST_ADDRESS "ST_REGFORM_ADDRESS",
    IN ST_CONTACTS "ST_REGFORM_CONTACTS",
    
    IN ST_BANKS "ST_REGFORM_BANKS",
    IN ST_BANKING_DETAILS "ST_REGFORM_BANKING_DETAILS",
    
    IN ST_BUSINESS_HISTORY "ST_BUSINESS_HISTORY",
    IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
    IN ST_PROMOTERS "ST_PROMOTERS",
    
    IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
    IN ST_UPDATED_FIELDS "DEALER_PORTAL_MASTER_REGFORM_FIELDS_UPDATED",
    IN ST_EVENTS "ST_REQUEST_EVENTS_LOG",
    
    
    OUT OUT_SUCCESS NVARCHAR(150),
    OUT OUT_ERROR_CODE BIGINT,
    OUT OUT_ERROR_MESSAGE VARCHAR(1000),
    OUT OUT_EMAIL_TO NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN

   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_OBR_COUNT INTEGER;
    DECLARE LV_CURR_DATE TIMESTAMP;
    DECLARE LV_COUNT INTEGER;
    DECLARE LV_APPROVER_COUNT INTEGER;
    DECLARE LV_SAVED_AS_DRAFT NVARCHAR(1);
    DECLARE LV_STATUS INTEGER;
    DECLARE LV_MESSAGE NVARCHAR(150);
    --Opentext Values
    DECLARE LV_IDEAL_DIST_CODE INTEGER;
    DECLARE LV_OT_COUNT INTEGER;
    DECLARE LV_OT_PARENT_ID NVARCHAR(25);
    DECLARE LV_OT_FOLDER1_ID NVARCHAR(25);
    DECLARE LV_OT_FOLDER2_ID NVARCHAR(25);
    -- Event Values
    DECLARE LV_EVENT_COUNT INTEGER;
    DECLARE LV_EVENT_NO INTEGER;
    DECLARE LV_EVENT_CODE INTEGER;
    DECLARE LV_REMARK NVARCHAR(100);
    -- Next Approver details
    DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
    DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
    DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
    DECLARE LV_HIERARCHY_ID NVARCHAR(10);
    

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;  

    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    
    OUT_SUCCESS := null;
    LV_OBR_COUNT := 0;       
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;

    --capture updated fields
    DELETE FROM "DEALER_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" WHERE "REQ_NO" = :IN_REQUEST_NO;
    INSERT INTO "DEALER_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" 
    (
        "REQ_NO","S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G2T1F1","S1G2T1F2","S1G2T1F3","S1G2T1F4",
        "S1G2T1F5","S1G2T1F6","S1G2T1F7","S1G2T1F8","S1G2T1F9","S1G2T1F10","S1G2T1F11","S1G3T1F1","S1G3T1F2","S1G3T1F3","S1G3T1F4","S1G3T1F5","S1G3T1F6","S1G3T1F7","S1G3T1F8",
        "S1G3T1F9","S1G3T1F10","S1G3T1F11","S1G3T1F12","S1G3T1F13","S1G4T1F1","S1G4T1F2","S1G4T1F3","S1G4T1F4","S1G4T1F5","S1G4T1F6","S1G4T1F7",
        "S1G4T1F8","S1G4T1F9","S1G4T1F10","S1G4T1F11","S1G5T2F1","S1G5T2F2","S1G5T2F3","S1G5T2F4","S1G5T2F5" ,"S1G5T2F6","S1G5T2F7",
        "S1G5T2F8","S1G5T2F9","S1G5T2F11","S1G5T2F12","S1G5T2F13","S1G6T1F1","S1G6T1F2","S1G6T1F3","S1G6T1F4","S1G6T1F5","S1G6T1F6","S1G7T1F1","S1G7T1F2","S1G7T1F3","S1G7T1F4","S1G7T1F5","S1G7T1F6",
        "S1G7T1F7","S1G7T1F8","S1G7T1F9","S1G7T1F10","S1G7T1F11","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6",
        "S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T1F10","S2G1T1F11","S2G1T1F12","S2G2T1F1","S2G2T1F2","S2G2T1F3","S2G2T1F4","S2G2T1F5","S2G2T1F6","S2G2T1F7","S2G2T1F8","S2G2T1F9",
        "S2G2T1F10","S2G2T1F12","S2G2T1F13","S2G2T1F14","S2G2T2F1","S2G2T2F2","S2G2T2F3","S2G2T2F4","S2G2T3F1","S2G2T3F2","S2G3T1F1","S2G3T1F2","S2G3T1F3","S2G3T1F4","S2G3T1F5","S2G3T1F6","S2G3T1F7","S3G1T1F1","S3G1T1F2","S3G1T1F3",
        "S3G1T1F4","S3G1T1F5","S3G1T1F6","S3G1T1F7","S3G1T1F8","S3G2T1F1","S3G2T1F2","S3G2T1F3","S3G2T1F4","S3G2T1F5","S3G2T1F6","S3G3T1F1","S3G3T1F2","S3G3T1F3",
        "S3G3T1F4","S3G3T1F5","S3G3T1F6","S3G3T1F7","S3G3T1F8","S3G3T1F9","S4A1F1","S4A2F1","S4A3F1","S4A4F1","S4A5F1","S4A6F1","S4A7F1","S4A8F1","S4A9F1","S4A10F1","S4A11F1","S5G1F1","S5G1F2","S5G1F3","S5G1F4"
    )
    SELECT  :IN_REQUEST_NO,"S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G2T1F1","S1G2T1F2","S1G2T1F3","S1G2T1F4",
    "S1G2T1F5","S1G2T1F6","S1G2T1F7","S1G2T1F8","S1G2T1F9","S1G2T1F10","S1G2T1F11","S1G3T1F1","S1G3T1F2","S1G3T1F3","S1G3T1F4","S1G3T1F5","S1G3T1F6","S1G3T1F7","S1G3T1F8",
    "S1G3T1F9","S1G3T1F10","S1G3T1F11","S1G3T1F12","S1G3T1F13","S1G4T1F1","S1G4T1F2","S1G4T1F3","S1G4T1F4","S1G4T1F5","S1G4T1F6","S1G4T1F7",
    "S1G4T1F8","S1G4T1F9","S1G4T1F10","S1G4T1F11","S1G5T2F1","S1G5T2F2","S1G5T2F3","S1G5T2F4","S1G5T2F5" ,"S1G5T2F6","S1G5T2F7",
    "S1G5T2F8","S1G5T2F9","S1G5T2F11","S1G5T2F12","S1G5T2F13","S1G6T1F1","S1G6T1F2","S1G6T1F3","S1G6T1F4","S1G6T1F5","S1G6T1F6","S1G7T1F1","S1G7T1F2","S1G7T1F3","S1G7T1F4","S1G7T1F5","S1G7T1F6",
    "S1G7T1F7","S1G7T1F8","S1G7T1F9","S1G7T1F10","S1G7T1F11","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6",
    "S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T1F10","S2G1T1F11","S2G1T1F12","S2G2T1F1","S2G2T1F2","S2G2T1F3","S2G2T1F4","S2G2T1F5","S2G2T1F6","S2G2T1F7","S2G2T1F8","S2G2T1F9",
    "S2G2T1F10","S2G2T1F12","S2G2T1F13","S2G2T1F14","S2G2T2F1","S2G2T2F2","S2G2T2F3","S2G2T2F4","S2G2T3F1","S2G2T3F2","S2G3T1F1","S2G3T1F2","S2G3T1F3","S2G3T1F4","S2G3T1F5","S2G3T1F6","S2G3T1F7","S3G1T1F1","S3G1T1F2","S3G1T1F3",
    "S3G1T1F4","S3G1T1F5","S3G1T1F6","S3G1T1F7","S3G1T1F8","S3G2T1F1","S3G2T1F2","S3G2T1F3","S3G2T1F4","S3G2T1F5","S3G2T1F6","S3G3T1F1","S3G3T1F2","S3G3T1F3",
    "S3G3T1F4","S3G3T1F5","S3G3T1F6","S3G3T1F7","S3G3T1F8","S3G3T1F9","S4A1F1","S4A2F1","S4A3F1","S4A4F1","S4A5F1","S4A6F1","S4A7F1","S4A8F1","S4A9F1","S4A10F1","S4A11F1","S5G1F1","S5G1F2","S5G1F3","S5G1F4"
    FROM :ST_UPDATED_FIELDS;
    
    -- Section General Info--------------------------------------------------------------------
    IF :IN_STEP_NO = 1 OR :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5
    THEN
    
        -- Delete existing section one data
        DELETE FROM "DEALER_PORTAL_REQUEST_INFO" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        DELETE FROM "DEALER_PORTAL_REGFORM_ADDRESS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        DELETE FROM "DEALER_PORTAL_REGFORM_CONTACTS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    
    -- 1) Insert into Main Table:
        INSERT INTO "DEALER_PORTAL_REQUEST_INFO"  
        (
        "REQUEST_NO","MOBILE_NO","SAP_DIST_CODE","IDEAL_DIST_CODE","STATUS","REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE","CREATION_TYPE",
        "DIST_NAME1","DIST_NAME2","DIST_CODE","APPROVER_LEVEL","APPROVER_ROLE","REQUESTER_ID","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO","SECONDARY_EMAILS_ID","ORG_ESTAB_YEAR","WEBSITE",
        "VAT_REG_NUMBER","VAT_REG_DATE","VAT_CHECK","LAST_SAVED_STEP","COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION","SUBMISSION_DATE",
        "LAST_UPDATED_ON","OT_PARENT_ID" ,"OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK",
        "CREATED_ON","COMMENT","LEGACY_ID","BU_CODE","TOT_PERM_EMP","TOT_TEMP_EMP","NOE_ACC","NOE_ADM","NOE_HR","NOE_QA","NOE_MAN","NOE_SAL","NOE_SEC","NOE_ANY","SAP_DIST_NO",
        "PROPOSAL_DATE","ENTITY_NAME","BUSINESS_NATURE","TERR_HOSP_ACC","SELLING_POINT","DIST_RECOMMMEDATION","DIST_RELATION","SALES_ASSOCIATE_ID","SA_APPROVED_ON","SAVED_AS_DRAFT","LIC_NO","LIC_NO_DATE",
        "REGISTERED_ADDR","OFFICE_ADDR","SHIP_TO_ADDR","WAREHOUSE_ADDR"
        )
        SELECT 
        :IN_REQUEST_NO,"MOBILE_NO","SAP_DIST_CODE","IDEAL_DIST_CODE",:IN_STATUS,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE","CREATION_TYPE",
        "DIST_NAME1","DIST_NAME2","DIST_CODE","APPROVER_LEVEL","APPROVER_ROLE","REQUESTER_ID","BP_TYPE_CODE","BP_TYPE_DESC",:IS_RESEND,"MDG_CR_NO","LAST_ACTIVE_REQ_NO","SECONDARY_EMAILS_ID","ORG_ESTAB_YEAR","WEBSITE",
        "VAT_REG_NUMBER","VAT_REG_DATE","VAT_CHECK",:IN_STEP_NO,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION","SUBMISSION_DATE",
        :LV_CURR_TIMESTAMP,"OT_PARENT_ID" ,"OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK",
        :LV_CURR_TIMESTAMP,"COMMENT","LEGACY_ID","BU_CODE","TOT_PERM_EMP","TOT_TEMP_EMP","NOE_ACC","NOE_ADM","NOE_HR","NOE_QA","NOE_MAN","NOE_SAL","NOE_SEC","NOE_ANY","SAP_DIST_NO",
        "PROPOSAL_DATE","ENTITY_NAME","BUSINESS_NATURE","TERR_HOSP_ACC","SELLING_POINT","DIST_RECOMMMEDATION","DIST_RELATION","SALES_ASSOCIATE_ID","SA_APPROVED_ON","SAVED_AS_DRAFT","LIC_NO","LIC_NO_DATE",
        "REGISTERED_ADDR","OFFICE_ADDR","SHIP_TO_ADDR","WAREHOUSE_ADDR"
        FROM :ST_MAIN;
        
                -- Insert OpenText ids into DEALER_PORTAL_REGFORM_FOLDER_IDS 
        SELECT "IDEAL_DIST_CODE","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID" 
        INTO LV_IDEAL_DIST_CODE,LV_OT_PARENT_ID,LV_OT_FOLDER1_ID, LV_OT_FOLDER2_ID  FROM :ST_MAIN;
        
        SELECT COUNT(*) INTO LV_OT_COUNT FROM "DEALER_PORTAL_REGFORM_FOLDER_IDS" 
        WHERE "IDEAL_DIST_CODE" = :LV_IDEAL_DIST_CODE;
        
        IF :LV_OT_COUNT = 0 THEN
            INSERT INTO "DEALER_PORTAL_REGFORM_FOLDER_IDS" VALUES(
            :LV_IDEAL_DIST_CODE,:LV_OT_PARENT_ID,:LV_OT_FOLDER1_ID,:LV_OT_FOLDER2_ID,null,null,null);
        END IF;
    
    -- 2) Insert into Address Table: 
        INSERT INTO "DEALER_PORTAL_REGFORM_ADDRESS" 
        (
            "REQUEST_NO", "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
            "POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT","ADDR_CODE"
        )
        SELECT  :IN_REQUEST_NO, "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
            "POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT","ADDR_CODE"
        FROM :ST_ADDRESS;
        
    -- 3) Insert into Contacts 
        INSERT INTO "DEALER_PORTAL_REGFORM_CONTACTS" 
        (
            "REQUEST_NO", "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
            "STATE", "POSTAL_CODE","LOC_NO","LOC_TYPE","BR_WH_NO","ADDR_CODE","CONCERN_TYPE","INFRA_DETAIL","TEMP_DETAIL","PROPERTY_TYPE","ON_LEASE","ATTACH_CODE","FILE_NAME","FILE_TYPE","FILE_MIMETYPE","FILE_CONTENT","UPLOAD_DATE"
        )
        SELECT  :IN_REQUEST_NO, "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
            "STATE", "POSTAL_CODE","LOC_NO","LOC_TYPE","BR_WH_NO","ADDR_CODE","CONCERN_TYPE","INFRA_DETAIL","TEMP_DETAIL","PROPERTY_TYPE","ON_LEASE","ATTACH_CODE","FILE_NAME","FILE_TYPE","FILE_MIMETYPE","FILE_CONTENT","UPLOAD_DATE"
        FROM :ST_CONTACTS;
        
        COMMIT;
    OUT_SUCCESS := :IN_REQUEST_NO;
    END IF;
    
    -- Section 2 Financial Info--------------------------------------------------------------------
    IF :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5
    THEN

        DELETE FROM "DEALER_PORTAL_REGFORM_BANKS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        DELETE FROM "DEALER_PORTAL_REGFORM_BANKING_DETAILS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;

        INSERT INTO "DEALER_PORTAL_REGFORM_BANKS" 
        (
            "REQUEST_NO", "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO","ACCOUNT_NAME" ,
            "ACCOUNT_HOLDER","BANK_ID","BANK_KEY",
            "BANK_COUNTRY", "BRANCH_NAME",
            "IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE","OTHER_CODE","OTHER_CODE_NAME", "OTHER_CODE_VAL",
                "PAYMENT_METHOD","PAYMENT_METHOD_DESC",  "PAYMENT_TERMS", "PAYMENT_TERMS_DESC",
                "INVOICE_CURRENCY", "VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER",  
                "BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
        )
        SELECT  :IN_REQUEST_NO, "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO","ACCOUNT_NAME", "ACCOUNT_HOLDER",
        "BANK_ID","BANK_KEY",
            "BANK_COUNTRY", "BRANCH_NAME",
            "IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE","OTHER_CODE","OTHER_CODE_NAME", "OTHER_CODE_VAL",
                "PAYMENT_METHOD","PAYMENT_METHOD_DESC",  "PAYMENT_TERMS", "PAYMENT_TERMS_DESC",
                "INVOICE_CURRENCY", "VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER",
                "BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
        FROM :ST_BANKS;

        INSERT INTO "DEALER_PORTAL_REGFORM_BANKING_DETAILS" 
        (
            "REQUEST_NO","SR_NO","NAME","BRANCH_NAME","FACILTY","AMOUNT_LIMIT","ASSO_SINCE"
        )
        SELECT  :IN_REQUEST_NO,"SR_NO","NAME","BRANCH_NAME","FACILTY","AMOUNT_LIMIT","ASSO_SINCE"
        FROM :ST_BANKING_DETAILS
    
        COMMIT;
            
    OUT_SUCCESS := :IN_REQUEST_NO;
    END IF;
    
    
    -- Section 3 Operation Info--------------------------------------------------------------------
    IF :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5
    THEN
        
        -- Delete existing section one data
            DELETE FROM "DEALER_PORTAL_REGFORM_PROMOTERS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
            DELETE FROM "DEALER_PORTAL_REGFORM_BUSINESS_HISTORY" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
            DELETE FROM "DEALER_PORTAL_REGFORM_CUSTOMERS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        
    -- 9) Insert into Customers Table
        INSERT INTO "DEALER_PORTAL_REGFORM_CUSTOMERS" 
        (
            "REQUEST_NO","SR_NO","CUST_NO","CUSTOMER_NAME","YEAR1","YEAR2"
        )
        SELECT  :IN_REQUEST_NO,"SR_NO","CUST_NO","CUSTOMER_NAME","YEAR1","YEAR2"
        FROM :ST_CUSTOMER;

        INSERT INTO "DEALER_PORTAL_REGFORM_BUSINESS_HISTORY"
        (   
            "REQUEST_NO","SR_NO","DEALERSHIP","SUPPLIER_NAME","SINCE","PROD_GROUP","PURCHASES"
        )
        SELECT  :IN_REQUEST_NO,"SR_NO","DEALERSHIP","SUPPLIER_NAME","SINCE","PROD_GROUP","PURCHASES"
        FROM :ST_BUSINESS_HISTORY;


        INSERT INTO "DEALER_PORTAL_REGFORM_PROMOTERS"
        (
            "REQUEST_NO","SR_NO","NAME","QUALIFICATION","WORK_EXP","YRS_IN_COMP","DESIGNATION","ROLE"
        )
        SELECT  :IN_REQUEST_NO,"SR_NO","NAME","QUALIFICATION","WORK_EXP","YRS_IN_COMP","DESIGNATION","ROLE"
        FROM :ST_PROMOTERS;
        
        COMMIT;
        
    OUT_SUCCESS := :IN_REQUEST_NO;
    END IF;

    -- Section 4 Attachments--------------------------------------------------------------------
    IF :IN_STEP_NO = 4 OR :IN_STEP_NO = 5
    THEN
        
        -- Delete existing section one data         
            DELETE FROM "DEALER_PORTAL_REGFORM_ATTACH_FIELDS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
            DELETE FROM "DEALER_PORTAL_REGFORM_ATTACHMENTS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
                
    -- 14)Insert into Attachments fields    
        INSERT INTO "DEALER_PORTAL_REGFORM_ATTACH_FIELDS" 
        (
            "REQUEST_NO", "IS_UAE_COMPANY", "ISSUE_ELEC_TAX_INV", "SOLE_DIST_MFG_SER", "PASSPORT_OF_AUTH_SIGNATORY", "PASSPORT_REPR_AUTH_PERSON"
        )
        SELECT  :IN_REQUEST_NO, "IS_UAE_COMPANY", "ISSUE_ELEC_TAX_INV", "SOLE_DIST_MFG_SER", "PASSPORT_OF_AUTH_SIGNATORY", "PASSPORT_REPR_AUTH_PERSON"
        FROM :ST_ATTACH_FIELDS;
        
    -- 15) Insert into Attachments fields   
        
        INSERT INTO "DEALER_PORTAL_REGFORM_ATTACHMENTS" 
            (
                "REQUEST_NO", "SR_NO", "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
                "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOADED_ON", "OT_DOC_ID",
                "OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
            )
        SELECT  :IN_REQUEST_NO, "SR_NO", "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
                "FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", :LV_CURR_TIMESTAMP, "OT_DOC_ID",
                "OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
        FROM :ST_ATTACH;
        
        COMMIT; 
        
        OUT_SUCCESS := :IN_REQUEST_NO;
            
    END IF;

    -- Section 5 - Submission Page--------------------------------------------------------------------
    IF :IN_STEP_NO = 5 AND (:IN_STATUS = 4 OR :IN_STATUS = 7) OR :DEALER_CODE_FLAG = 'IR'
        THEN
        
        -- Generate status, event code & remarks based on status
        IF :IN_STATUS = 4 AND :IS_RESEND IS NULL --In Progress
        THEN
            LV_STATUS := 6; -- Status - In Approval - SMDM
            LV_EVENT_CODE := 4; -- Event- OB Form Submitted
            LV_REMARK := 'Form submitted by - ' || :IN_USER_ID;
            
            LV_MESSAGE := 'Registration Form Submitted for Request: '  || :IN_REQUEST_NO || '. Your form will be forwarded to Procurement Team for verification.';
            
        ELSEIF :IN_STATUS = 4 AND :IS_RESEND = 'X' --Sent Back
        THEN
            LV_STATUS := 9; -- -- Status - Form Resent
            LV_EVENT_CODE := 8; -- Event - OB Request Resent
            LV_REMARK := 'Form resent by - ' || :IN_USER_ID;
            
            LV_MESSAGE := 'Registration Form Resubmitted for Request: '  || :IN_REQUEST_NO || '. Your form will be forwarded to Procurement Team for verification.';
            
        END IF;
        
        
        LV_NXT_APPROVER_LEVEL := 1;
        IS_RESEND := null;
        
        LV_NXT_APPROVER_ROLE := null;
    --  LV_NXT_APPROVER_ID := :IN_BUYER_ID
        
        SELECT COUNT(*)
        INTO LV_APPROVER_COUNT
        FROM "DEALER_PORTAL_MASTER_APPROVAL_HIERARCHY" 
        WHERE "LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :IN_ENTITY_CODE AND "TYPE" = 'REG';

        IF LV_APPROVER_COUNT != 0
        THEN
        -- Get PM/SMDM from Registration Matrix---------------------
            SELECT "ROLE_CODE", "USER_IDS"
            INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_ID
            FROM "DEALER_PORTAL_MASTER_APPROVAL_HIERARCHY" 
            WHERE "LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :IN_ENTITY_CODE AND "TYPE" = 'REG';


            -- SELECT COUNT(*)
            -- INTO LV_COUNT 
            -- FROM "DEALER_PORTAL_USER_DELEGATION"
            -- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;

            -- IF :LV_COUNT != 0
            -- THEN
            -- -- LV_NXT_APPROVER_ROLE := null;

            -- SELECT "ASSIGN_TO" 
            -- INTO LV_NXT_APPROVER_ID 
            -- FROM "DEALER_PORTAL_USER_DELEGATION"
            -- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
            -- END IF;
            ------------------------------------------------------------

            -- 15) Update Main Table
            UPDATE "DEALER_PORTAL_REQUEST_INFO"
            SET 
            "STATUS" = :LV_STATUS,
            "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
            "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE 
            -- "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
            -- "NEXT_APPROVER" = :LV_NXT_APPROVER_ID
            WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        ELSE 
            UPDATE "DEALER_PORTAL_REQUEST_INFO"
            SET 
            "STATUS" = :LV_STATUS,
            "APPROVER_LEVEL" = NULL,
            "APPROVER_ROLE" = NULL
            -- "APPROVER_ROLE" =NULL,
            -- "NEXT_APPROVER" = NULL
            WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        
        END IF;
        -- 16) Insert into Events Log:  

        -- Get Count for new EVENT_NO
        SELECT COUNT(*) into LV_EVENT_COUNT FROM "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
        WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        
        LV_EVENT_NO := LV_EVENT_COUNT + 1;
        
        INSERT INTO "DEALER_PORTAL_REQUEST_EVENTS_LOG" 
        (
            "REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
        )
        SELECT :IN_REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
        FROM :ST_EVENTS;
        
        OUT_SUCCESS := :LV_MESSAGE;
        OUT_EMAIL_TO := LV_NXT_APPROVER_ID;  -- PM/SMDM as next approver
        
        COMMIT; 
                
        END IF;
    
END